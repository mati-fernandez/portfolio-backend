{
  "info": {
    "title": "React Portfolio",
    "text": "In this project, I experienced improvements in code readability and modularity compared to the previous portfolio, which was built with Vanilla JS.\n\n I applied the use of hooks like useState and useEffect, custom hooks, context, components, complex CSS styles, conditional rendering with JSX, and routing with React Router, among other things.\n\n More recently I added fetch to centralize the content of Portfolios developed in different technologies. Now provided by a CDN",
    "continue": "Continue"
  },
  "description": "I'm a front-end developer with experience in JavaScript and React, focused on continuing to perfect my work while exploring new technologies. My solid foundation in programming logic allows me to confidently tackle challenges and quickly adapt to market demands.",
  "menu": {
    "home": "Home",
    "skills": "Skills",
    "projects": "Projects",
    "odyssey": "Odyssey",
    "certifications": "Certifications"
  },
  "skills": {
    "html5": { "title": "HTML5" },
    "css3": {
      "title": "CSS3"
    },
    "sass": {
      "title": "SASS"
    },
    "js": {
      "title": "JavaScript"
    },
    "ts": {
      "title": "TypeScript"
    },
    "git": {
      "title": "GIT"
    },
    "react": {
      "title": "React"
    },
    "next": {
      "title": "Next.js"
    },
    "prisma": {
      "title": "Prisma"
    },
    "redux": {
      "title": "Redux"
    },
    "router": {
      "title": "Router"
    },
    "figma": {
      "title": "Figma"
    },
    "english": {
      "title": "English"
    },
    "sql": {
      "title": "SQL"
    },
    "linux": {
      "title": "Linux"
    },
    "portugues": {
      "title": "Portuguese"
    },
    "wordpress": {
      "title": "WordPress"
    },
    "tailwind": {
      "title": "Tailwind"
    },
    "native": {
      "title": "React Native"
    }
  },
  "projects": {
    "buttons": {
      "viewMore": "Show secondary projects...",
      "viewLess": "Hide secondary projects..."
    },
    "info": {
      "title": "Projects section",
      "text": "In this section, I showcase works of my own authorship, whether they are challenges assigned to me in a course or ideas I came up with on my own.",
      "continue": "Continue"
    },
    "projectsList": {
      "rqm": {
        "title": "Random Quote Machine (React)",
        "description": "This must have been my first experience with asynchronous requests to an external API. Using the 'Axios' library in this case and state management in React.",
        "close": "Close",
        "open": "Open project"
      },
      "mdp": {
        "title": "Markdown Previewer (React)",
        "description": "Text formatter to Markdown in which I implemented React's state management and used the 'marked' library.",
        "close": "Close",
        "open": "Open project"
      },
      "drum": {
        "title": "Drum Machine (React)",
        "description": "Sound box in which I implemented state and effect management in React, and grid in CSS.",
        "close": "Close",
        "open": "Open project"
      },
      "calculator": {
        "title": "JS Calculator (React)",
        "description": "Calculator in which I put into practice state and effect management in React, and grid in CSS. I also remember that it made me think a lot to solve the logic of each possible situation to make it 'unbreakable'.",
        "close": "Close",
        "open": "Open project"
      },
      "pomodoro": {
        "title": "Pomodoro Clock (React)",
        "description": "In the pomodoro clock I implemented a more advanced handling of the state as well as the effect with the use of callbacks and dependency monitoring. It was not easy to pass all the tests since it has an advanced logic for the level I had up to that point. useRef was also used.",
        "close": "Close",
        "open": "Open project"
      },
      "portfolioJS": {
        "title": "Portfolio (Vanilla JS)",
        "description": "In the old portfolio I was able to put into practice event-driven programming with Vanilla JavaScript and the responsive design. Also more recently I incorporated the fetch to have the content modification of all the portfolios centralized in a JSON.",
        "close": "Close",
        "open": "Open project"
      },
      "portfolioReact": {
        "title": "Portfolio (React)",
        "description": "In this project, I experienced improvements in the readability and modularity of the code compared to the previous portfolio, which was made in Vanilla JS.\n\n I put into practice the use of hooks like useState and useEffect, custom hooks, context, components, complex styles with CSS, conditional rendering with JSX, route management with React Router, among other things.",
        "close": "Close",
        "open": "Open project"
      },
      "tailwindMigration": {
        "title": "Migration to Tailwind CSS",
        "description": "I transformed the entire app by replacing traditional styles with Tailwind CSS classes, aiming for improved code maintainability and readability. I eliminated unnecessary files, leveraged Tailwind v4 to avoid tailwind.config.js, and added Motion animations, integrated simply and declaratively into the components.",
        "close": "Close",
        "open": "Open project"
      },
      "tranquilidad": {
        "title": "La Tranquilidad Cabins (WordPress)",
        "description": "A tourist accommodation website project built in Local WP, using plugins, theme editors, and pages (Gutenberg), with a responsive design. I added functions with JS to functions.php (such as custom WhatsApp messages) and configured SMTP for the form. I uploaded it to a free server and made several configurations, including SSL.",
        "close": "Close",
        "open": "Open project"
      },
      "snake": {
        "title": "Snake Game (React + TS)",
        "description": "A classic Snake game built with React, TypeScript, Zustand, Tailwind CSS, and the Canvas API. Designed to be responsive and playable on both desktop and mobile. Features keyboard and touch controls, persistent high scores, difficulty settings, and minimal UI. Custom game loop with native rendering and canvas drawing, including smooth animations and directional snake head.",
        "close": "Close",
        "open": "Open project"
      }
    }
  },

  "odyssey": {
    "buttons": {
      "viewMore": "Show secondary odysseys...",
      "viewLess": "Hide secondary odysseys..."
    },
    "info": {
      "title": "Odyssey section",
      "text": "In this section I share projects carried out during my studies, where I followed the steps of the classes and went deeper into the concepts as doubts arose.",
      "continue": "Continue"
    },
    "odysseyList": {
      "dom": {
        "title": "DOM (Vanilla JS; for PC)",
        "description": "Practical exercise on DOM manipulation with JavaScript, exploring events and dynamically modifying content.",
        "close": "Close",
        "open": "View Exercise"
      },
      "tetris": {
        "title": "Tetris (Vanilla JS)",
        "description": "Implementation of the classic Tetris game using only JavaScript, HTML, and CSS, practicing timing management and DOM manipulation.",
        "close": "Close",
        "open": "View Exercise"
      },
      "monkeytype": {
        "title": "Monkeytype (Vanilla JS; for PC)",
        "description": "Exercise to improve typing speed through creating an interactive application that measures and evaluates typing speed.",
        "close": "Close",
        "open": "View Exercise"
      },
      "excel": {
        "title": "Excel (Vanilla JS; for PC)",
        "description": "In this exercise I put my programming logic into practice. It imitates some basic Excel functions. I intend to continue expanding its functionalities as I find it an interesting challenge.",
        "close": "Close",
        "open": "View Exercise"
      },
      "ecommerce": {
        "title": "eCommerce (Next.js)",
        "description": "I developed a FullStack application with Next.js 15, using Server Components, Server Actions and new caching mechanisms to optimize performance. I integrated Sanity CMS, Clerk for authentication, Stripe for payments and Tailwind CSS with ShadCN UI for layout. Zustand handled global state, and the application was deployed in Vercel. (Use 42 repeatedly for card and 424 for code; Ad blockers can break the app).",
        "close": "Close",
        "open": "View Exercise"
      },
      "reddish": {
        "title": "Reddit clone (Next.js)",
        "description": "Reddit-like social platform built with Next.js 15 and Sanity CMS, featuring AI-powered moderation, Clerk authentication, voting, nested threads, community creation, and search. Uses Server Components, Server Actions, and Vercel AI SDK for real-time moderation. Clean, responsive UI with Tailwind CSS and ShadcnUI. To try AI moderation, deploy yourself and use your OpenAI API key. See my GitHub for full README and setup instructions.",
        "close": "Close",
        "open": "View Exercise"
      },
      "ram": {
        "title": "Rick & Morty (React Native + Expo)",
        "description": "I built a mobile app from scratch using React Native and Expo, focused on consuming and displaying data from a public API. The project includes navigation with expo-router (using both Stacks and Tabs), responsive design via nativewind, basic animations using Animated, and handling of images and SVGs. I also worked on optimizing render behavior, solving header-related issues on real devices, and refining layout consistency. The goal was to bring clean frontend practices into mobile development with a modular and maintainable structure.",
        "close": "Close",
        "open": "View Exercise"
      },
      "wallet": {
        "title": "Wallet (React Native + Expo)",
        "description": "I developed a Wallet Full Stack for the Personal Finance Registry, with Fronnd in React Native (Expo Router) and Backend in Node.JS. I implemented authentication with Clerk, Database in Neon, Redis for Limiting, and render for the deployment of the server. The app operates in Mobile (Android) and on web (with separate Build), using EAS for Builds and Hosting.",
        "close": "Close",
        "open": "View Exercise"
      },
      "draw": {
        "title": "Draw (Vanilla JS; for PC)",
        "description": "Introduction to creating graphics on the web using the HTML5 Canvas element and JavaScript to draw.",
        "close": "Close",
        "open": "View Exercise"
      },
      "nextjsBlog": {
        "title": "Blog (Next.js)",
        "description": "Project for beginners. Starting to get familiar with Next.js and its structure. This time it is a blog that uses the 'gray-matter' and 'markdown-it' libraries to format the articles.",
        "close": "Close",
        "open": "View Exercise"
      },
      "tasksList": {
        "title": "Tasks List (React + TS)",
        "description": "Mini project to review TypeScript. It is a to-do list with the possibility of adding and removing items.",
        "close": "Close",
        "open": "View Exercise"
      }
    }
  },
  "certifications": {
    "buttons": {
      "viewMore": "Show secondary certifications...",
      "viewLess": "Hide secondary certifications..."
    },
    "info": {
      "title": "Certifications section",
      "text": "If you click on 'View Certification', for each one (freeCodeCamp) you will be able to see the projects completed during that course.",
      "continue": "Continue"
    },
    "certificationsList": {
      "rwd": {
        "title": "Responsive Web Design",
        "description": "Certification covering the essential concepts of web design, including CSS Flexbox, CSS Grid, and responsive design for different screen sizes. If you enter, you will be able to see the projects completed in this course...",
        "close": "Close",
        "open": "View Certification"
      },
      "javaScript": {
        "title": "JS Algorithms & Data Structures",
        "description": "Certification covering topics like sorting algorithms, common data structures in JavaScript, and solving complex problems. If you enter, you will be able to see the projects completed in this course...",
        "close": "Close",
        "open": "View Certification"
      },
      "fdl": {
        "title": "Front End Development Libraries",
        "description": "Certification focused on using popular libraries like React, Redux, and tools for building user interfaces.",
        "close": "Close",
        "open": "View Certification"
      },
      "auto": {
        "title": "Unofficial Certification (YouTube & GPT)",
        "description": "It's not a formal certification, but it represents many hours of real, self-directed study. It includes complete courses and guided practice sessions through channels such as Jon Mircha, MiduDev, Soy Dalto, Web Dev Simplified, Fazt, freeCodeCamp, and others, as well as technical consultations through ChatGPT.",
        "close": "Close",
        "open": "View Certification"
      },
      "ind": {
        "title": "Industry 4.0",
        "description": "Training focused on understanding the fundamentals of Industry 4.0, exploring devices used in industrial environments and the practical application of Python for data analysis, signal visualization, and automation. Key concepts of artificial intelligence applied to image recognition were also covered, along with basic cybersecurity concepts.",
        "close": "Close",
        "open": "View Certification"
      },
      "reactA2": {
        "title": "Advanced React 2",
        "description": "A short, advanced React course focused on best practices and modern tools. It covers monorepos with Nx, modular organization, Storybook for isolated components, an introduction to TypeScript, testing with Jest and the React Testing Library (including MSW), common design patterns, and deployment automation with GitHub Actions.",
        "close": "Close",
        "open": "View Certification"
      },
      "reactA": {
        "title": "Advanced React 1",
        "description": "Short Advanced React course. It included environment setup, development tools, and debugging in VSCode. I delved into advanced components such as HOCs, Portals, Error Boundaries, and fragments. I also covered best practices, form handling, and testing to ensure quality and performance in real-world projects.",
        "close": "Close",
        "open": "View Certification"
      },
      "reactErr": {
        "title": "React: Common Mistakes and How to Fix Them",
        "description": "Short course on common errors in React. NX was used as a monorepo manager and topics such as lack of documentation, keyless lists, huge components, relative paths, poorly defined types, misuse of Redux, and state disorganization were addressed. The focus was on maintaining clean, typed code.",
        "close": "Close",
        "open": "View Certification"
      },
      "tsa": {
        "title": "Advanced TypeScript",
        "description": "A short course designed to review advanced TypeScript concepts: project setup, packaging, organizing into modules, using generic types, decorators, and publishing to NPM.",
        "close": "Close",
        "open": "View Certification"
      },
      "tse": {
        "title": "Essential TypeScript",
        "description": "Certification covering the essential concepts of TypeScript, including types, interfaces, and advanced features.",
        "close": "Close",
        "open": "View Certification"
      },
      "ics": {
        "title": "Introduction to Cybersecurity",
        "description": "I took this course to verify basic knowledge in cybersecurity.",
        "close": "Close",
        "open": "View Certification"
      },
      "html": {
        "title": "HTML",
        "description": "HTML fundamentals, basic web page structure and creating accessible content.",
        "close": "Close",
        "open": "View Certification"
      },
      "html5css3": {
        "title": "HTML5 and CSS3",
        "description": "Introduction to modern web design techniques using HTML5 and CSS3, including multimedia elements and advanced styles.",
        "close": "Close",
        "open": "View Certification"
      },
      "bbddsql": {
        "title": "Introduction to Databases and SQL",
        "description": "Basic principles of relational databases and data querying using SQL.",
        "close": "Close",
        "open": "View Certification"
      },
      "flash": {
        "title": "Flash",
        "description": "Creating interactive multimedia content with Flash, ideal for animations and dynamic presentations.",
        "close": "Close",
        "open": "View Certification"
      },
      "presu": {
        "title": "Digital Budgeting",
        "description": "Study of techniques to calculate costs and prepare effective budgets for web projects.",
        "close": "Close",
        "open": "View Certification"
      },
      "photoshop": {
        "title": "Photoshop",
        "description": "Image editing and graphic design using essential Adobe Photoshop tools.",
        "close": "Close",
        "open": "View Certification"
      },
      "cssdivs": {
        "title": "CSS and DIVs",
        "description": "Using CSS for web page design and structural organization with DIVs, optimizing layouts.",
        "close": "Close",
        "open": "View Certification"
      },
      "jquery": {
        "title": "jQuery",
        "description": "Using jQuery to simplify DOM manipulation, visual effects, and event handling in JavaScript.",
        "close": "Close",
        "open": "View Certification"
      }
    }
  }
}
